<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Transmission结合File browser搭建小型BT云站</title>
    <url>/2021/01/27/Transmission%E7%BB%93%E5%90%88File-browser%E6%90%AD%E5%BB%BA%E5%B0%8F%E5%9E%8BBT%E4%BA%91%E7%AB%99/</url>
    <content><![CDATA[<p>通过Transmission提供种子文件的上传、下载和做种，File browser 作为在线文件浏览器提供部分格式视频（mp4、flv）在线收看和文件下载功能。</p>
<ul>
<li>操作系统：Ubuntu 18.04 LTS<h2 id="Transmission部署"><a href="#Transmission部署" class="headerlink" title="Transmission部署"></a>Transmission部署</h2><h3 id="安装下载"><a href="#安装下载" class="headerlink" title="安装下载"></a>安装下载</h3>可以直接通过apt安装<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install transmission-daemon</span><br></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3>Transmission的配置文件默认放在/etc/transmission-daemon/setting.json。在安装完毕后，Transmission会默认启动，修改配置文件之前先通过下面的命令停止服务：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop transmission-daemon</span><br></pre></td></tr></table></figure>
通过Vim打开setting.json配置文件<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;alt-speed-down&quot;: 50,</span><br><span class="line">    &quot;alt-speed-enabled&quot;: false,</span><br><span class="line">    &quot;alt-speed-time-begin&quot;: 540,</span><br><span class="line">    &quot;alt-speed-time-day&quot;: 127,</span><br><span class="line">    &quot;alt-speed-time-enabled&quot;: false,</span><br><span class="line">    &quot;alt-speed-time-end&quot;: 1020,</span><br><span class="line">    &quot;alt-speed-up&quot;: 50,</span><br><span class="line">    &quot;bind-address-ipv4&quot;: &quot;0.0.0.0&quot;,  #开启IPV4地址绑定</span><br><span class="line">    &quot;bind-address-ipv6&quot;: &quot;::&quot;, #开启IPV6地址绑定</span><br><span class="line">    &quot;blocklist-enabled&quot;: false, #启用黑名单</span><br><span class="line">    &quot;blocklist-url&quot;: &quot;http://www.example.com/blocklist&quot;, #黑名单地址</span><br><span class="line">    &quot;cache-size-mb&quot;: 4, </span><br><span class="line">    &quot;dht-enabled&quot;: false, #DTH启用，这里我们要关闭</span><br><span class="line">    &quot;download-dir&quot;: &quot;/home/transmission-daemon/downloads&quot;, #默认下载目录</span><br><span class="line">    &quot;download-limit&quot;: 100,</span><br><span class="line">    &quot;download-limit-enabled&quot;: 0,</span><br><span class="line">    &quot;download-queue-enabled&quot;: true, #启用下载队列</span><br><span class="line">    &quot;download-queue-size&quot;: 40,</span><br><span class="line">    &quot;encryption&quot;: 2, #修改为2</span><br><span class="line">    &quot;idle-seeding-limit&quot;: 30,</span><br><span class="line">    &quot;idle-seeding-limit-enabled&quot;: false,</span><br><span class="line">    &quot;incomplete-dir&quot;: &quot;/var/lib/transmission-daemon/Downloads&quot;,</span><br><span class="line">    &quot;incomplete-dir-enabled&quot;: false,</span><br><span class="line">    &quot;lpd-enabled&quot;: false,</span><br><span class="line">    &quot;max-peers-global&quot;: 2000,</span><br><span class="line">    &quot;message-level&quot;: 1,</span><br><span class="line">    &quot;peer-congestion-algorithm&quot;: &quot;&quot;,</span><br><span class="line">    &quot;peer-id-ttl-hours&quot;: 6,</span><br><span class="line">    &quot;peer-limit-global&quot;: 2000,</span><br><span class="line">    &quot;peer-limit-per-torrent&quot;: 500,</span><br><span class="line">    &quot;peer-port&quot;: 51413, #端口</span><br><span class="line">    &quot;peer-port-random-high&quot;: 65535, #端口范围最高值</span><br><span class="line">    &quot;peer-port-random-low&quot;: 49152, #端口范围最低值</span><br><span class="line">    &quot;peer-port-random-on-start&quot;: false,</span><br><span class="line">    &quot;peer-socket-tos&quot;: &quot;default&quot;,</span><br><span class="line">    &quot;pex-enabled&quot;: true,</span><br><span class="line">    &quot;port-forwarding-enabled&quot;: false,</span><br><span class="line">    &quot;preallocation&quot;: 1,</span><br><span class="line">    &quot;prefetch-enabled&quot;: 1,</span><br><span class="line">    &quot;queue-stalled-enabled&quot;: true,</span><br><span class="line">    &quot;queue-stalled-minutes&quot;: 30,</span><br><span class="line">    &quot;ratio-limit&quot;: 2,</span><br><span class="line">    &quot;ratio-limit-enabled&quot;: false,</span><br><span class="line">    &quot;rename-partial-files&quot;: true,</span><br><span class="line">    &quot;rpc-authentication-required&quot;: true,</span><br><span class="line">    &quot;rpc-bind-address&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;rpc-enabled&quot;: true, #是否启用RPC，设置为True</span><br><span class="line">    &quot;rpc-password&quot;: &quot;&quot;, #密码，编辑的时候输入明文密码，保持之后，自动变为加密的</span><br><span class="line">    &quot;rpc-port&quot;: 12333,</span><br><span class="line">    &quot;rpc-url&quot;: &quot;/transmission/&quot;,</span><br><span class="line">    &quot;rpc-username&quot;: &quot;username&quot;, #用户名</span><br><span class="line">    &quot;rpc-whitelist&quot;: &quot;&quot;, #白名单IP,多个IP用‘,&#x27;分隔,可以直接修改成0.0.0.或者*</span><br><span class="line">    &quot;rpc-whitelist-enabled&quot;: true, #是否启用白名单，如果需要可以修改为true</span><br><span class="line">    &quot;scrape-paused-torrents-enabled&quot;: true,</span><br><span class="line">    &quot;script-torrent-done-enabled&quot;: false,</span><br><span class="line">    &quot;script-torrent-done-filename&quot;: &quot;&quot;,</span><br><span class="line">    &quot;seed-queue-enabled&quot;: false,</span><br><span class="line">    &quot;seed-queue-size&quot;: 10,</span><br><span class="line">    &quot;speed-limit-down&quot;: 300,</span><br><span class="line">    &quot;speed-limit-down-enabled&quot;: false,</span><br><span class="line">    &quot;speed-limit-up&quot;: 500,</span><br><span class="line">    &quot;speed-limit-up-enabled&quot;: false,</span><br><span class="line">    &quot;start-added-torrents&quot;: true,</span><br><span class="line">    &quot;trash-original-torrent-files&quot;: false,</span><br><span class="line">    &quot;umask&quot;: 18,</span><br><span class="line">    &quot;upload-limit&quot;: 100,</span><br><span class="line">    &quot;upload-limit-enabled&quot;: 0,</span><br><span class="line">    &quot;upload-slots-per-torrent&quot;: 14,</span><br><span class="line">    &quot;utp-enabled&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
按需要修改完成后就可以通过以下命令启动服务。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start transmission-daemon</span><br></pre></td></tr></table></figure>
启动后WebUI默认运行在9091端口，通过如下网址即可访问：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://&lt;你的ip地址&gt;:9091/transmission/web/</span><br></pre></td></tr></table></figure>
<h2 id="File-browser部署"><a href="#File-browser部署" class="headerlink" title="File browser部署"></a>File browser部署</h2></li>
<li>Github：<a class="link"   href="https://github.com/filebrowser/filebrowser" >https://github.com/filebrowser/filebrowser<i class="fas fa-external-link-alt"></i></a></li>
<li>Site：<a class="link"   href="https://filebrowser.org/" >https://filebrowser.org/<i class="fas fa-external-link-alt"></i></a><h3 id="安装下载-1"><a href="#安装下载-1" class="headerlink" title="安装下载"></a>安装下载</h3>官网给出的安装脚本如下：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://filebrowser.org/get.sh | bash</span><br></pre></td></tr></table></figure>
部分机器可能会出现如下的错误提示：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</span><br></pre></td></tr></table></figure>
可以通过手动访问<a class="link"   href="https://raw.githubusercontent.com/filebrowser/get/master/get.sh%E7%9A%84%E6%96%B9%E5%BC%8F%E8%8E%B7%E5%8F%96%E5%A6%82%E4%B8%8B%E7%9A%84%E8%84%9A%E6%9C%AC%E6%BA%90%E7%A0%81%EF%BC%8C%E6%89%8B%E5%8A%A8%E5%88%9B%E5%BB%BAget.sh%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E3%80%82" >https://raw.githubusercontent.com/filebrowser/get/master/get.sh的方式获取如下的脚本源码，手动创建get.sh脚本文件执行下载安装。<i class="fas fa-external-link-alt"></i></a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#           File Browser Installer Script</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   GitHub: https://github.com/filebrowser/filebrowser</span></span><br><span class="line"><span class="comment">#   Issues: https://github.com/filebrowser/filebrowser/issues</span></span><br><span class="line"><span class="comment">#   Requires: bash, mv, rm, tr, type, grep, sed, curl/wget, tar (or unzip on OSX and Windows)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   This script installs File Browser to your path.</span></span><br><span class="line"><span class="comment">#   Usage:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   	$ curl -fsSL https://filebrowser.xyz/get.sh | bash</span></span><br><span class="line"><span class="comment">#   	  or</span></span><br><span class="line"><span class="comment">#   	$ wget -qO- https://filebrowser.xyz/get.sh | bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   In automated environments, you may want to run as root.</span></span><br><span class="line"><span class="comment">#   If using curl, we recommend using the -fsSL flags.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   This should work on Mac, Linux, and BSD systems, and</span></span><br><span class="line"><span class="comment">#   hopefully Windows with Cygwin. Please open an issue if</span></span><br><span class="line"><span class="comment">#   you notice any bugs.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">install_filemanager()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">trap</span> <span class="string">&#x27;echo -e &quot;Aborted, error $? in command: $BASH_COMMAND&quot;; trap ERR; return 1&#x27;</span> ERR</span><br><span class="line">	filemanager_os=<span class="string">&quot;unsupported&quot;</span></span><br><span class="line">	filemanager_arch=<span class="string">&quot;unknown&quot;</span></span><br><span class="line">	install_path=<span class="string">&quot;/usr/local/bin&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># Termux on Android has $PREFIX set which already ends with /usr</span></span><br><span class="line">	<span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$ANDROID_ROOT</span>&quot;</span> &amp;&amp; -n <span class="string">&quot;<span class="variable">$PREFIX</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">		install_path=<span class="string">&quot;<span class="variable">$PREFIX</span>/bin&quot;</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># Fall back to /usr/bin if necessary</span></span><br><span class="line">	<span class="keyword">if</span> [[ ! -d <span class="variable">$install_path</span> ]]; <span class="keyword">then</span></span><br><span class="line">		install_path=<span class="string">&quot;/usr/bin&quot;</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># Not every platform has or needs sudo (https://termux.com/linux.html)</span></span><br><span class="line">	((EUID)) &amp;&amp; [[ -z <span class="string">&quot;<span class="variable">$ANDROID_ROOT</span>&quot;</span> ]] &amp;&amp; sudo_cmd=<span class="string">&quot;sudo&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">#########################</span></span><br><span class="line">	<span class="comment"># Which OS and version? #</span></span><br><span class="line">	<span class="comment">#########################</span></span><br><span class="line"></span><br><span class="line">	filemanager_bin=<span class="string">&quot;filebrowser&quot;</span></span><br><span class="line">	filemanager_dl_ext=<span class="string">&quot;.tar.gz&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># <span class="doctag">NOTE:</span> `uname -m` is more accurate and universal than `arch`</span></span><br><span class="line">	<span class="comment"># See https://en.wikipedia.org/wiki/Uname</span></span><br><span class="line">	unamem=<span class="string">&quot;<span class="subst">$(uname -m)</span>&quot;</span></span><br><span class="line">	<span class="keyword">case</span> <span class="variable">$unamem</span> <span class="keyword">in</span></span><br><span class="line">	*aarch64*)</span><br><span class="line">		filemanager_arch=<span class="string">&quot;arm64&quot;</span>;;</span><br><span class="line">	*64*)</span><br><span class="line">		filemanager_arch=<span class="string">&quot;amd64&quot;</span>;;</span><br><span class="line">	*86*)</span><br><span class="line">		filemanager_arch=<span class="string">&quot;386&quot;</span>;;</span><br><span class="line">	*armv5*)</span><br><span class="line">		filemanager_arch=<span class="string">&quot;armv5&quot;</span>;;</span><br><span class="line">	*armv6*)</span><br><span class="line">		filemanager_arch=<span class="string">&quot;armv6&quot;</span>;;</span><br><span class="line">	*armv7*)</span><br><span class="line">		filemanager_arch=<span class="string">&quot;armv7&quot;</span>;;</span><br><span class="line">	*)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;Aborted, unsupported or unknown architecture: <span class="variable">$unamem</span>&quot;</span></span><br><span class="line">		<span class="built_in">return</span> 2</span><br><span class="line">		;;</span><br><span class="line">	<span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">	unameu=<span class="string">&quot;<span class="subst">$(tr &#x27;[:lower:]&#x27; &#x27;[:upper:]&#x27; &lt;&lt;&lt;$(uname)</span>)&quot;</span></span><br><span class="line">	<span class="keyword">if</span> [[ <span class="variable">$unameu</span> == *DARWIN* ]]; <span class="keyword">then</span></span><br><span class="line">		filemanager_os=<span class="string">&quot;darwin&quot;</span></span><br><span class="line">	<span class="keyword">elif</span> [[ <span class="variable">$unameu</span> == *LINUX* ]]; <span class="keyword">then</span></span><br><span class="line">		filemanager_os=<span class="string">&quot;linux&quot;</span></span><br><span class="line">	<span class="keyword">elif</span> [[ <span class="variable">$unameu</span> == *FREEBSD* ]]; <span class="keyword">then</span></span><br><span class="line">		filemanager_os=<span class="string">&quot;freebsd&quot;</span></span><br><span class="line">	<span class="keyword">elif</span> [[ <span class="variable">$unameu</span> == *NETBSD* ]]; <span class="keyword">then</span></span><br><span class="line">		filemanager_os=<span class="string">&quot;netbsd&quot;</span></span><br><span class="line">	<span class="keyword">elif</span> [[ <span class="variable">$unameu</span> == *OPENBSD* ]]; <span class="keyword">then</span></span><br><span class="line">		filemanager_os=<span class="string">&quot;openbsd&quot;</span></span><br><span class="line">	<span class="keyword">elif</span> [[ <span class="variable">$unameu</span> == *WIN* || <span class="variable">$unameu</span> == MSYS* ]]; <span class="keyword">then</span></span><br><span class="line">		<span class="comment"># Should catch cygwin</span></span><br><span class="line">		sudo_cmd=<span class="string">&quot;&quot;</span></span><br><span class="line">		filemanager_os=<span class="string">&quot;windows&quot;</span></span><br><span class="line">		filemanager_bin=<span class="string">&quot;filebrowser.exe&quot;</span></span><br><span class="line">		filemanager_dl_ext=<span class="string">&quot;.zip&quot;</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;Aborted, unsupported or unknown OS: <span class="variable">$uname</span>&quot;</span></span><br><span class="line">		<span class="built_in">return</span> 6</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">########################</span></span><br><span class="line">	<span class="comment"># Download and extract #</span></span><br><span class="line">	<span class="comment">########################</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;Downloading File Browser for <span class="variable">$filemanager_os</span>/<span class="variable">$filemanager_arch</span>...&quot;</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">type</span> -p curl &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">		net_getter=<span class="string">&quot;curl -fsSL&quot;</span></span><br><span class="line">	<span class="keyword">elif</span> <span class="built_in">type</span> -p wget &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">		net_getter=<span class="string">&quot;wget -qO-&quot;</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;Aborted, could not find curl or wget&quot;</span></span><br><span class="line">		<span class="built_in">return</span> 7</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">	</span><br><span class="line">	filemanager_file=<span class="string">&quot;<span class="variable">$&#123;filemanager_os&#125;</span>-<span class="variable">$filemanager_arch</span>-filebrowser<span class="variable">$filemanager_dl_ext</span>&quot;</span></span><br><span class="line">	filemanager_tag=<span class="string">&quot;<span class="subst">$($&#123;net_getter&#125;  https://api.github.com/repos/filebrowser/filebrowser/releases/latest | grep -o &#x27;<span class="string">&quot;tag_name&quot;</span>: <span class="string">&quot;.*&quot;</span>&#x27; | sed &#x27;s/<span class="string">&quot;//g&#x27; | sed &#x27;s/tag_name: //g&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst">	filemanager_url=<span class="string">&quot;https://github.com/filebrowser/filebrowser/releases/download/<span class="variable">$filemanager_tag</span>/<span class="variable">$filemanager_file</span>&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst">	echo <span class="string">&quot;<span class="variable">$filemanager_url</span>&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"></span></span></span><br><span class="line"><span class="string"><span class="subst">	# Use $PREFIX for compatibility with Termux on Android</span></span></span><br><span class="line"><span class="string"><span class="subst">	rm -rf <span class="string">&quot;<span class="variable">$PREFIX</span>/tmp/<span class="variable">$filemanager_file</span>&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"></span></span></span><br><span class="line"><span class="string"><span class="subst">	$&#123;net_getter&#125; <span class="string">&quot;<span class="variable">$filemanager_url</span>&quot;</span> &gt; <span class="string">&quot;<span class="variable">$PREFIX</span>/tmp/<span class="variable">$filemanager_file</span>&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"></span></span></span><br><span class="line"><span class="string"><span class="subst">	echo <span class="string">&quot;Extracting...&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst">	case <span class="string">&quot;<span class="variable">$filemanager_file</span>&quot;</span> in</span></span></span><br><span class="line"><span class="string"><span class="subst">		*.zip)</span>    unzip -o &quot;</span><span class="variable">$PREFIX</span>/tmp/<span class="variable">$filemanager_file</span><span class="string">&quot; &quot;</span><span class="variable">$filemanager_bin</span><span class="string">&quot; -d &quot;</span><span class="variable">$PREFIX</span>/tmp/<span class="string">&quot; ;;</span></span><br><span class="line"><span class="string">		*.tar.gz) tar -xzf &quot;</span><span class="variable">$PREFIX</span>/tmp/<span class="variable">$filemanager_file</span><span class="string">&quot; -C &quot;</span><span class="variable">$PREFIX</span>/tmp/<span class="string">&quot; &quot;</span><span class="variable">$filemanager_bin</span><span class="string">&quot; ;;</span></span><br><span class="line"><span class="string">	esac</span></span><br><span class="line"><span class="string">	chmod +x &quot;</span><span class="variable">$PREFIX</span>/tmp/<span class="variable">$filemanager_bin</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	echo &quot;</span>Putting filemanager <span class="keyword">in</span> <span class="variable">$install_path</span> (may require password)<span class="string">&quot;</span></span><br><span class="line"><span class="string">	<span class="variable">$sudo_cmd</span> mv &quot;</span><span class="variable">$PREFIX</span>/tmp/<span class="variable">$filemanager_bin</span><span class="string">&quot; &quot;</span><span class="variable">$install_path</span>/<span class="variable">$filemanager_bin</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">	if setcap_cmd=<span class="subst">$(PATH+=$PATH:/sbin type -p setcap)</span>; then</span></span><br><span class="line"><span class="string">		<span class="variable">$sudo_cmd</span> <span class="variable">$setcap_cmd</span> cap_net_bind_service=+ep &quot;</span><span class="variable">$install_path</span>/<span class="variable">$filemanager_bin</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">	fi</span></span><br><span class="line"><span class="string">	<span class="variable">$sudo_cmd</span> rm -- &quot;</span><span class="variable">$PREFIX</span>/tmp/<span class="variable">$filemanager_file</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	if type -p <span class="variable">$filemanager_bin</span> &gt;/dev/null 2&gt;&amp;1; then</span></span><br><span class="line"><span class="string">		echo &quot;</span>Successfully installed<span class="string">&quot;</span></span><br><span class="line"><span class="string">		trap ERR</span></span><br><span class="line"><span class="string">		return 0</span></span><br><span class="line"><span class="string">	else</span></span><br><span class="line"><span class="string">		echo &quot;</span>Something went wrong, File Browser is not <span class="keyword">in</span> your path<span class="string">&quot;</span></span><br><span class="line"><span class="string">		trap ERR</span></span><br><span class="line"><span class="string">		return 1</span></span><br><span class="line"><span class="string">	fi</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">install_filemanager</span></span><br></pre></td></tr></table></figure>
脚本创建完成后通过<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash get.sh</span><br></pre></td></tr></table></figure>
即可完成下载。<h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3>如果是在根目录下完成的安装，该目录下会生成filebrowser.db文件，可通过如下方式进行相关配置：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置监听地址</span></span><br><span class="line">filebrowser -d ~/filebrowser.db config <span class="built_in">set</span> --address 0.0.0.0</span><br><span class="line"><span class="comment">#设置监听端口</span></span><br><span class="line">filebrowser -d ~/filebrowser.db config <span class="built_in">set</span> --port 8088</span><br><span class="line"><span class="comment">#设置语言环境</span></span><br><span class="line">filebrowser -d ~/filebrowser.db config <span class="built_in">set</span> --locale zh-cn</span><br><span class="line"><span class="comment">#设置日志位置</span></span><br><span class="line">filebrowser -d ~/filebrowser.db config <span class="built_in">set</span> --<span class="built_in">log</span> /var/<span class="built_in">log</span>/filebrowser.log</span><br><span class="line"><span class="comment">#添加一个用户,其中的root和password分别是用户名和密码，根据自己的需求更改</span></span><br><span class="line">filebrowser -d ~/filebrowser.db users add root password --perm.admin</span><br></pre></td></tr></table></figure>
Transmission服务下载的文件默认存放在/var/lib/transmission-daemon/downloads下面，通过如下命令开启file browser服务，并将默认浏览目录指向transmission的下载文件：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">filebrowser -r /var/lib/transmission-daemon/downloads -d ~/filebrowser.db</span><br></pre></td></tr></table></figure>
通过访问对应端口服务，输入用户名密码即可进行文件浏览和下载等服务。</li>
</ul>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>bt</tag>
        <tag>transmission</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/01/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-1525-字符串的好分割数目</title>
    <url>/2021/01/29/LeetCode-1525-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A5%BD%E5%88%86%E5%89%B2%E6%95%B0%E7%9B%AE/</url>
    <content><![CDATA[<h2 id="题目地址（Leetcode-1525）"><a href="#题目地址（Leetcode-1525）" class="headerlink" title="题目地址（Leetcode-1525）"></a>题目地址（Leetcode-1525）</h2><p><a class="link"   href="https://leetcode.com/problems/number-of-good-ways-to-split-a-string/" >https://leetcode.com/problems/number-of-good-ways-to-split-a-string/<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给你一个字符串s 一个分割被称为 「好分割」 当它满足：将 s 分割成 2 个字符串 p 和 q ，它们连接起来等于 s 且 p 和 q 中不同字符的数目相同。</span><br><span class="line"></span><br><span class="line">请你返回 s 中好分割的数目</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">输入：s &#x3D; &quot;aacaba&quot;</span><br><span class="line">输出：2</span><br><span class="line">解释：总共有 5 种分割字符串 &quot;aacaba&quot; 的方法，其中 2 种是好分割。</span><br><span class="line">(&quot;a&quot;, &quot;acaba&quot;) 左边字符串和右边字符串分别包含 1 个和 3 个不同的字符。</span><br><span class="line">(&quot;aa&quot;, &quot;caba&quot;) 左边字符串和右边字符串分别包含 1 个和 3 个不同的字符。</span><br><span class="line">(&quot;aac&quot;, &quot;aba&quot;) 左边字符串和右边字符串分别包含 2 个和 2 个不同的字符。这是一个好分割。</span><br><span class="line">(&quot;aaca&quot;, &quot;ba&quot;) 左边字符串和右边字符串分别包含 2 个和 2 个不同的字符。这是一个好分割。</span><br><span class="line">(&quot;aacab&quot;, &quot;a&quot;) 左边字符串和右边字符串分别包含 3 个和 1 个不同的字符。</span><br></pre></td></tr></table></figure>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>首先尝试了暴力解法，直接TLE。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numSplits</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(getTypeSize(s.substring(<span class="number">0</span>,i))==getTypeSize(s.substring(i,s.length())))&#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTypeSize</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">        Set&lt;Character&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s.toCharArray())&#123;</span><br><span class="line">            set.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> set.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>改为两次遍历的方式，对比不同字母个数，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numSplits</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] left = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">int</span>[] right = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 第一次遍历，记录 字符串中每个字母出现了多少次 以及 一共出现了多少个不同的字母</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s.toCharArray())&#123;</span><br><span class="line">            <span class="keyword">if</span>(right[c]++==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 不同字母个数</span></span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> r = count;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        1.第二次遍历，left数组记录当前某个字母的出现次数，l记录当前一共出现了多少个不同字母</span></span><br><span class="line"><span class="comment">        2.每次出现一个字母，就从right数组中减去一次该字母的出现次数，即right数组记录的是</span></span><br><span class="line"><span class="comment">          当前遍历位置到字符串末尾这段子字符串中某个字母的出现次数</span></span><br><span class="line"><span class="comment">        3.当 l==r 的时候，说明当前左边子字符串中不同字母个数等于当前右边子字符串中不同字母的个数</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s.toCharArray())&#123;</span><br><span class="line">            <span class="keyword">if</span>(left[c]++==<span class="number">0</span>)&#123;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(--right[c]==<span class="number">0</span>)&#123;</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Runtime beats: 98.42%<br>Memory usage beats: 63.09%</p>
</blockquote>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>String</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-97-交错字符串</title>
    <url>/2021/02/04/LeetCode-97-%E4%BA%A4%E9%94%99%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="题目地址（LeetCode-97）"><a href="#题目地址（LeetCode-97）" class="headerlink" title="题目地址（LeetCode-97）"></a>题目地址（LeetCode-97）</h2><p><a class="link" href="https://leetcode-cn.com/problems/interleaving-string/">https://leetcode-cn.com/problems/interleaving-string/<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定三个字符串 s1、s2、s3，请你帮忙验证 s3 是否是由 s1 和 s2 交错 组成的。</span><br><span class="line"></span><br><span class="line">两个字符串 s 和 t 交错 的定义与过程如下，其中每个字符串都会被分割成若干 非空 子字符串：</span><br><span class="line"></span><br><span class="line">s &#x3D; s1 + s2 + ... + sn</span><br><span class="line">t &#x3D; t1 + t2 + ... + tm</span><br><span class="line">|n - m| &lt;&#x3D; 1</span><br><span class="line">交错 是 s1 + t1 + s2 + t2 + s3 + t3 + ... 或者 t1 + s1 + t2 + s2 + t3 + s3 + ...</span><br><span class="line">提示：a + b 意味着字符串 a 和 b 连接。</span><br></pre></td></tr></table></figure>
<p>示例1:<br><img src="/.com//interleave.jpg"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：s1 &#x3D; &quot;aabcc&quot;, s2 &#x3D; &quot;dbbca&quot;, s3 &#x3D; &quot;aadbbcbcac&quot;</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure>
<p>示例2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：s1 &#x3D; &quot;aabcc&quot;, s2 &#x3D; &quot;dbbca&quot;, s3 &#x3D; &quot;aadbbbaccc&quot;</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure>
<p>示例3:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：s1 &#x3D; &quot;&quot;, s2 &#x3D; &quot;&quot;, s3 &#x3D; &quot;&quot;</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>采用动态规划的思想，<code>dp[i][j]</code>表示<code>s1</code>从0到i-1的子字符串和<code>s2</code>从0到j-1的子字符串能否组成<code>s3</code>从0到i+j-1的字符串。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isInterleave</span><span class="params">(String s1, String s2, String s3)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len1 = s1.length(), len2 = s2.length(), len3 = s3.length();</span><br><span class="line">        <span class="keyword">if</span> (len1 + len2 != len3) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 表示 s1[0...i-1] 和 s2[0...j-1] 能否组成交叉字符串 s3[0...i+j-1]</span></span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[len1 + <span class="number">1</span>][len2 + <span class="number">1</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 考虑s2为空的情况</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len1; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = s1.charAt(i - <span class="number">1</span>) == s3.charAt(i - <span class="number">1</span>) &amp;&amp; dp[i - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 考虑s1为空的情况</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len2; i++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>][i] = s2.charAt(i - <span class="number">1</span>) == s3.charAt(i - <span class="number">1</span>) &amp;&amp; dp[<span class="number">0</span>][i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= len2; j++) &#123;</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j] &amp;&amp; s1.charAt(i - <span class="number">1</span>) == s3.charAt(i + j - <span class="number">1</span>)</span><br><span class="line">                        || dp[i][j - <span class="number">1</span>] &amp;&amp; s2.charAt(j - <span class="number">1</span>) == s3.charAt(i + j - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[len1][len2];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Runtime beats: 66.87%<br>Memory usage beats: 98.20%</p>
</blockquote>
<h2 id="讨论区解法"><a href="#讨论区解法" class="headerlink" title="讨论区解法"></a>讨论区解法</h2><p>该解法利用DFS，用<code>invalid[i][j]</code>数组记录<code>s1[0~i]</code>和<code>s2[0~j]</code>能否组成交错数组。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isInterleave</span><span class="params">(String s1, String s2, String s3)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] c1 = s1.toCharArray(), c2 = s2.toCharArray(), c3 = s3.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> m = s1.length(), n = s2.length();</span><br><span class="line">        <span class="keyword">if</span>(m + n != s3.length()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> dfs(c1, c2, c3, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="keyword">boolean</span>[m + <span class="number">1</span>][n + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[] c1, <span class="keyword">char</span>[] c2, <span class="keyword">char</span>[] c3, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k, <span class="keyword">boolean</span>[][] invalid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(invalid[i][j]) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(k == c3.length) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">boolean</span> valid = </span><br><span class="line">            i &lt; c1.length &amp;&amp; c1[i] == c3[k] &amp;&amp; dfs(c1, c2, c3, i + <span class="number">1</span>, j, k + <span class="number">1</span>, invalid) || </span><br><span class="line">            j &lt; c2.length &amp;&amp; c2[j] == c3[k] &amp;&amp; dfs(c1, c2, c3, i, j + <span class="number">1</span>, k + <span class="number">1</span>, invalid);</span><br><span class="line">        <span class="keyword">if</span>(!valid) invalid[i][j] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">return</span> valid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Runtime beats: 89.92%<br>Memory usage beats: 22.57%</p>
</blockquote>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>String</tag>
      </tags>
  </entry>
</search>
